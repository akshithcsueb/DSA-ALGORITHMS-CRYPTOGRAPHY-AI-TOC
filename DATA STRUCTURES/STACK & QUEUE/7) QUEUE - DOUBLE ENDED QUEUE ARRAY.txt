// USED CIRCULAR WAY
#include <iostream>
#include "vector"
using namespace std;

const int size = 5;
int storage[size] = {};

int front = -1;
int rear = -1;

void insert_rear(int value)
{
    if(front == -1 && rear == -1)
    {
        front = 0;
        rear = 0;
        storage[rear] = value;
    }
    else if(((rear+1) % size) == front)
    {
        cout << "Queue is full" << endl;
    }
    else
    {
        rear = (rear+1) % size;
        storage[rear] = value;
    }
}

void delete_front()
{
    if(front == -1 && rear == -1)
    {
        cout << "Queue is empty" << endl;
    }
    else if(front == rear)
    {
        front = -1;
        rear = -1;
    }
    else
    {
        front = (front+1) % size;
    }
}

void insert_front(int value)
{
    if(front == -1 && rear == -1)
    {
        front = 0;
        rear = 0;
        storage[front] = value;
    }
    else if(((front + (size-1)) % size) == rear)
    {
        cout << "Queue is full" << endl;
    }
    else
    {
        front = (front + (size-1)) % size;
        storage[front] = value;
    }
}

void delete_rear()
{
    if(front == -1 && rear == -1)
    {
        cout << "Queue is empty" << endl;
    }
    else if(front == rear)
    {
        front = -1;
        rear = -1;
    }
    else
    {
        rear = (rear + (size-1)) % size;
    }
}

void display()
{
    if(front == -1 && rear == -1)
    {
        cout << "Queue is empty" << endl;
    }
    else
    {
        int temp = front;
        while(temp != rear)
        {
            cout << storage[temp] << " ";
            temp = (temp+1) % size;
        }
        cout << storage[temp] << endl;
    }
}

int main()
{
    insert_front(3);
    insert_front(1);
    display();
}