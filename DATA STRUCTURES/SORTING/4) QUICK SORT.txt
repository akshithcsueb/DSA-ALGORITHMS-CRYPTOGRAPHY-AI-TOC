#include <iostream>
using namespace std;

void swap(int &value1, int &value2)
{
    int temp = value1;
    value1 = value2;
    value2 = temp;
}

int partition(int *array, int start, int end)
{
    int pivot = array[end];
    int index = start;

    for(int i=start; i<end; i++)
    {
        if(array[i] <= pivot)
        {
            swap(array[i], array[index]);
            index++;
        }
    }
    swap(array[index], array[end]);
    return index;
}

void quick_sort(int *array, int start, int end)
{
    if(start < end)
    {
        int index = partition(array, start, end);
        quick_sort(array, start, index-1);
        quick_sort(array, index+1, end);
    }
}

int main()
{
    cout << "Enter no of elements to be sorted" << endl;
    int total_elements;
    cin >> total_elements;

    cout << "Enter elements one by one" << endl;
    int array[total_elements];
    for(int i=0; i<total_elements; i++)
    {
        cin >> array[i];
    }

    quick_sort(array, 0, total_elements-1);

    cout << "Elements after sorting - " << endl;
    for(int i=0; i<total_elements; i++)
    {
        if(i == total_elements-1)
        {
            cout << array[i] << endl;
        }
        else
        {
            cout << array[i] << ", ";
        }
    }

    // Space complexity - O(1)
    // Time complexity - Best, Average - O(n log n) / Worst - O(n^2)
}